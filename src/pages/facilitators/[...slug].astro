---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import RootLayout from "../../layouts/RootLayout.astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("facilitators");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();

const groupServices = entry.data.services.filter((service) => service.isGroup);
const individualServices = entry.data.services.filter(
  (service) => !service.isGroup,
);
---

<RootLayout title={entry.data.name}>
  <!-- <section
    class="relative hero-section h-96 flex flex-col items-center justify-between pb-32 pt-32 text-center bg-cover bg-center"
    style={`background-image: url('${entry.data.image.src}')`}
  >
  </section> -->
  <section class="container mx-auto flex items-center justify-center">
    <Image src={entry.data.images[0]} alt={entry.data.name} />
  </section>
  <section
    class="flex flex-col items-center justify-center bg-primary py-10 text-white"
  >
    <div class="flex flex-col items-center justify-center max-w-screen-sm px-4">
      <h1 class="text-5xl pt-8 pb-3" transition:name="facilitators-title">
        {entry.data.name}
      </h1>
      <div class="flex flex-row gap-1.5">
        {
          entry.data.tags.map((tag) => (
            <p
              transition:name={`facilitators-tag-${tag}`}
              class="bg-secondary-teal rounded-xl  text-xxs font-semibold text-red  text-center p-1.5 uppercase"
            >
              {tag}
            </p>
          ))
        }
      </div>
    </div>
    <div class="px-4">
      <div
        class="prose text-white mt-5 prose-headings:text-white prose-a:text-secondary-blue"
      >
        <Content />
      </div>
      {
        individualServices.length && (
          <div class="flex flex-col items-center justify-center mt-4">
            <h2 class="text-3xl py-4">Servicii individuale</h2>
            <ul>
              {individualServices.map((service) => (
                <li class="flex flex-col items-center justify-center">
                  <h3 class="text-2xl text-secondary-blue underline p-1">
                    {service.name}
                  </h3>
                  <p class="text-xs">
                    {service.price} | {service.duration} | {service.summary}
                  </p>
                </li>
              ))}
            </ul>
          </div>
        )
      }

      {
        groupServices.length && (
          <div class="flex flex-col items-center justify-center mt-4">
            <h2 class="text-3xl py-4">Servicii de grup</h2>
            <ul>
              {groupServices.map((service) => (
                <li class="flex flex-col items-center justify-center">
                  <h3 class="text-2xl text-secondary-blue underline p-1">
                    {service.name}
                  </h3>
                  <p class="text-xs">
                    {service.price} | {service.duration} | {service.summary}
                  </p>
                </li>
              ))}
            </ul>
          </div>
        )
      }
    </div>
  </section>
</RootLayout>
